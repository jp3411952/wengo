package datacenter

import (
	"github.com/golang/protobuf/proto"
	"github.com/wengo/app/datacenter/dcdbmodel"
	"github.com/wengo/cmdconst"
	"github.com/wengo/cmdconst/cmdaccount"
	"github.com/wengo/dbsys"
	"github.com/wengo/msgcode"
	"github.com/wengo/network"
	"github.com/wengo/protobuf/pb/account_proto"
	"github.com/wengo/protobuf/pb/dcaccount_proto"
	"github.com/wengo/xlog"
)



//登录向中心服务器请求账号创建
func LSDCRegisterAccountMsgHandler(conn network.Conner, msgdata []byte) error {
	regAccout := &dcaccount_proto.LS_DC_ReqRegisterAccoutMsg{}
	erro := proto.Unmarshal(msgdata, regAccout)
	if erro != nil {
		xlog.ErrorLogNoInScene( "ServerHeartBeat %v", erro)
		return erro
	}
	Paccounts := PaccountMgr.GetAccountByUserName(regAccout.Username)
	if Paccounts != nil  {	//账号已经存在
		reqCode := &account_proto.RespnRegisterAccoutMsg{
			ClientConnID: regAccout.ClientConnID,
			ResCode: msgcode.RegisterAccountCode_IsExsist,
		}
		conn.WritePBMsg(cmdconst.Main_Account,cmdaccount.Sub_DC_LS_RegisterAccount,reqCode)
	 return erro
	}
	//单台机器超过注册码10个
	accountNumByMac  := PaccountMgr.GetMacCreateAccount(regAccout.MacAddr)
	if accountNumByMac >= 9 {
		reqCode := &account_proto.RespnRegisterAccoutMsg{
			ClientConnID: regAccout.ClientConnID,
			ResCode: msgcode.RegisterAccountCode_MACAccountNumIsMore,
		}
		conn.WritePBMsg(cmdconst.Main_Account,cmdaccount.Sub_DC_LS_RegisterAccount,reqCode)
		return nil
	}
	
	//加上 单个ip 10个数据限制
	//var clientConnID  uint32
	//var accountID  uint64
	////需要把连接id及AccountID用户传过去方便查询
	////先查询数据库中是否有数据
	////没有数据就插入数据
	////有数据就返回消息放入回调中
	//queryStr := fmt.Sprintf()
	//insertStr := fmt.Sprintf()
	////投递到数据库查询账号
	//dbsys.GameDB.AsyncRowsQuery()
	param := dbsys.PDBParamPool.Pop()
	account := PAccountPool.Pop()
	param.PlyMark.ConnID = regAccout.GetClientConnID()
	param.CbDispSys = PdataCenter.dispSys
	param.Param = &dcdbmodel.DB_Req_CreateAccount{
		Username:regAccout.GetUsername(),
		Password:regAccout.GetPassword(),
		ClientIp: regAccout.GetClientIp(),
		PhoneNum:regAccout.GetPhoneNum(),
		ClientType: regAccout.GetClientType(),
		MacAddr: regAccout.GetMacAddr(),
	}
	param.ServerConnID = conn.GetConnID()
	account.SetDBEventParam(param)
	dbsys.GameDB.AsyncCustomOneRowQuery(account)
	return erro
}
