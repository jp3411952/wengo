/*
创建时间: 2020/5/2
作者: zjy
功能介绍:

*/

package apploginsv

import (
	"errors"
	"github.com/golang/protobuf/proto"
	"github.com/wengo/appdata"
	"github.com/wengo/cmdconst"
	"github.com/wengo/cmdconst/datacenter"
	"github.com/wengo/model"
	"github.com/wengo/network"
	"github.com/wengo/protobuf/pb/common_proto"
	"github.com/wengo/protobuf/pb/world_proto"
	"github.com/wengo/xlog"
)

func ConnectWorldServerRepsn(conn network.Conner,msgdata []byte) error{
	restcode := &common_proto.RestInt32CodeMsg{}
	erro := proto.Unmarshal(msgdata,restcode)
	if erro != nil {
		xlog.ErrorLogNoInScene("ConnectWorldServerRepsn %v", erro)
		return erro
	}
	
	if restcode.ResCode != model.Link_Server_Succeed  {
		return errors.New("连接中心服失败")
	}
	
	serverInfo := &world_proto.ServerInfoMsg{
		AppId:   appdata.NetConf.App_id, //serid
		AppKind: appdata.NetConf.App_kind,
		OutAddr: appdata.NetConf.Out_addr,
		OutProt: appdata.NetConf.Out_prot,
	}
	xlog.DebugLogNoInScene("发送服务器信息到中心服")
	erro = conn.WritePBMsg(cmdconst.Main_DataCenter, datacenter.Sub_Req_RegisterServer,serverInfo)
	if erro != nil {
		conn.Close()
		return nil
	}

	return  erro
}

//注册服务器回复
func RegisterServerRepsn(conn network.Conner,msgdata []byte) error{
	restcode := &common_proto.RestInt32CodeMsg{}
	erro := proto.Unmarshal(msgdata,restcode)
	if erro != nil {
		xlog.ErrorLogNoInScene("RegisterServerRepsn %v", erro)
		return erro
	}
	
	xlog.DebugLogNoInScene("发送服务器信息到中心服  回复%v",restcode.ResCode)
	if restcode.ResCode != model.Register_Server_Succeed  { //Register_Server_Succeed
		conn.Close()
		return errors.New("RegisterServerRepsn 失败")
	}

	return  erro
}

//注册服务器回复
func WorldHeartBeatRepsn(conn network.Conner,msgdata []byte) error{
	restcode := &common_proto.RestInt32CodeMsg{}
	erro := proto.Unmarshal(msgdata,restcode)
	if erro != nil {
		xlog.ErrorLogNoInScene( "WorldHeartBeatRepsn %v", erro.Error())
		return erro
	}
	xlog.DebugLogNoInScene("心跳回复%v",restcode.ResCode)
	if restcode.ResCode != 1 {
		conn.Close()
		return errors.New("WorldHeartBeatRepsn 失败")
	}
	
	return  erro
}