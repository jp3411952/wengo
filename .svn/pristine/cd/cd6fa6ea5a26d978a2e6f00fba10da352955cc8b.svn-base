// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dcaccount_proto.proto

package dcaccount_proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//注册用户登录到中心服
type LS_DC_ReqRegisterAccoutMsg struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	ClientType           uint32   `protobuf:"varint,3,opt,name=client_type,json=clientType,proto3" json:"client_type,omitempty"`
	PhoneNum             uint32   `protobuf:"varint,4,opt,name=phone_num,json=phoneNum,proto3" json:"phone_num,omitempty"`
	ClientConnID         uint32   `protobuf:"varint,6,opt,name=client_connID,json=clientConnID,proto3" json:"client_connID,omitempty"`
	ClientIp             string   `protobuf:"bytes,7,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`
	MacAddr              string   `protobuf:"bytes,8,opt,name=mac_addr,json=macAddr,proto3" json:"mac_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LS_DC_ReqRegisterAccoutMsg) Reset()         { *m = LS_DC_ReqRegisterAccoutMsg{} }
func (m *LS_DC_ReqRegisterAccoutMsg) String() string { return proto.CompactTextString(m) }
func (*LS_DC_ReqRegisterAccoutMsg) ProtoMessage()    {}
func (*LS_DC_ReqRegisterAccoutMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_929ac4981a9b8677, []int{0}
}

func (m *LS_DC_ReqRegisterAccoutMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LS_DC_ReqRegisterAccoutMsg.Unmarshal(m, b)
}
func (m *LS_DC_ReqRegisterAccoutMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LS_DC_ReqRegisterAccoutMsg.Marshal(b, m, deterministic)
}
func (m *LS_DC_ReqRegisterAccoutMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LS_DC_ReqRegisterAccoutMsg.Merge(m, src)
}
func (m *LS_DC_ReqRegisterAccoutMsg) XXX_Size() int {
	return xxx_messageInfo_LS_DC_ReqRegisterAccoutMsg.Size(m)
}
func (m *LS_DC_ReqRegisterAccoutMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_LS_DC_ReqRegisterAccoutMsg.DiscardUnknown(m)
}

var xxx_messageInfo_LS_DC_ReqRegisterAccoutMsg proto.InternalMessageInfo

func (m *LS_DC_ReqRegisterAccoutMsg) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *LS_DC_ReqRegisterAccoutMsg) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *LS_DC_ReqRegisterAccoutMsg) GetClientType() uint32 {
	if m != nil {
		return m.ClientType
	}
	return 0
}

func (m *LS_DC_ReqRegisterAccoutMsg) GetPhoneNum() uint32 {
	if m != nil {
		return m.PhoneNum
	}
	return 0
}

func (m *LS_DC_ReqRegisterAccoutMsg) GetClientConnID() uint32 {
	if m != nil {
		return m.ClientConnID
	}
	return 0
}

func (m *LS_DC_ReqRegisterAccoutMsg) GetClientIp() string {
	if m != nil {
		return m.ClientIp
	}
	return ""
}

func (m *LS_DC_ReqRegisterAccoutMsg) GetMacAddr() string {
	if m != nil {
		return m.MacAddr
	}
	return ""
}

func init() {
	proto.RegisterType((*LS_DC_ReqRegisterAccoutMsg)(nil), "dcaccount_proto.LS_DC_ReqRegisterAccoutMsg")
}

func init() { proto.RegisterFile("dcaccount_proto.proto", fileDescriptor_929ac4981a9b8677) }

var fileDescriptor_929ac4981a9b8677 = []byte{
	// 235 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0xbd, 0x4a, 0x83, 0x31,
	0x14, 0x86, 0x89, 0x4a, 0x9b, 0x1e, 0x2d, 0x62, 0x44, 0x88, 0x75, 0xb0, 0xe8, 0xd2, 0xa9, 0x0e,
	0x5e, 0x41, 0x6d, 0x97, 0x82, 0x3a, 0x44, 0x27, 0x97, 0x10, 0x93, 0x43, 0xfd, 0xc0, 0xfc, 0x98,
	0x1f, 0xa4, 0x57, 0xed, 0x2d, 0xc8, 0x97, 0x54, 0x87, 0x2e, 0x09, 0xef, 0xf3, 0xbc, 0xc9, 0x81,
	0x03, 0x17, 0x46, 0x2b, 0xad, 0x7d, 0x71, 0x59, 0x86, 0xe8, 0xb3, 0x9f, 0xd7, 0x93, 0x9d, 0xee,
	0xe1, 0x9b, 0x1f, 0x02, 0x93, 0xc7, 0x17, 0xb9, 0x5a, 0x4a, 0x81, 0x5f, 0x02, 0x37, 0x5d, 0xca,
	0x18, 0x17, 0x7d, 0x25, 0x3f, 0xa5, 0x0d, 0x9b, 0x00, 0x2d, 0x09, 0xa3, 0x53, 0x16, 0x39, 0x99,
	0x92, 0xd9, 0x48, 0xfc, 0xe7, 0xde, 0x05, 0x95, 0xd2, 0xb7, 0x8f, 0x86, 0x1f, 0x34, 0xf7, 0x97,
	0xd9, 0x35, 0x1c, 0xeb, 0xcf, 0x0e, 0x5d, 0x96, 0x79, 0x1b, 0x90, 0x1f, 0x4e, 0xc9, 0x6c, 0x2c,
	0xa0, 0xa1, 0xd7, 0x6d, 0x40, 0x76, 0x05, 0xa3, 0xf0, 0xe1, 0x1d, 0x4a, 0x57, 0x2c, 0x3f, 0xaa,
	0x9a, 0x56, 0xf0, 0x5c, 0x2c, 0xbb, 0x85, 0xf1, 0xee, 0xb5, 0xf6, 0xce, 0xad, 0x57, 0x7c, 0x50,
	0x0b, 0x27, 0x0d, 0x2e, 0x2b, 0xeb, 0x7f, 0xd8, 0x95, 0xba, 0xc0, 0x87, 0x6d, 0x7e, 0x03, 0xeb,
	0xc0, 0x2e, 0x81, 0x5a, 0xa5, 0xa5, 0x32, 0x26, 0x72, 0x5a, 0xdd, 0xd0, 0x2a, 0xbd, 0x30, 0x26,
	0x3e, 0x9c, 0xbf, 0x9d, 0xcd, 0xef, 0xf6, 0xd6, 0xf0, 0x3e, 0xa8, 0xd7, 0xfd, 0x6f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x94, 0x43, 0xf9, 0x61, 0x37, 0x01, 0x00, 0x00,
}
